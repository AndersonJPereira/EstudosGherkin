name: CI - Testes Automatizados com Retry e Aggregate Report

on:
  push:
    branches: [ main, development ]
  workflow_dispatch: # ‚úÖ Permite rodar manualmente pelo bot√£o no GitHub

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: ‚òï Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ‚öôÔ∏è Cache do Maven
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: üöÄ Execu√ß√£o principal dos testes
        run: mvn clean test

      - name: üîÅ Reexecutar cen√°rios falhados at√© 3x
        run: |
          RETRIES=0
          FAILED_FILE="target/failed_scenarios.txt"

          while [ $RETRIES -lt 3 ] && [ -s "$FAILED_FILE" ]; do
            TRY=$((RETRIES+1))
            RETRY_FAILED="target/failed_scenarios-${TRY}.txt"

            echo "‚ñ∂Ô∏è Retry tentativa $TRY..."

            # Salva uma c√≥pia do arquivo de falhas atual
            cp "$FAILED_FILE" "$RETRY_FAILED"

            # Executa o rerun baseado na c√≥pia
            mvn test -Dcucumber.features=@target/failed_scenarios.txt \
              -Dcucumber.plugin="json:target/rerun-report-${TRY}.json" \
              -Dcucumber.plugin="rerun:$FAILED_FILE"

            RETRIES=$TRY
          done

      - name: üìä Gerar relat√≥rio consolidado (merged-report)
        run: mvn test-compile exec:java -Dexec.mainClass="utils.ReportGenerator"
